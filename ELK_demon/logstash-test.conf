input {
	tcp {
		port => 13889
		type => kippo
	}
	tcp {
		port => 13888
		type => iptables
	}

	tcp {
		port => 13887
		type => honeybot
	}

	file {
		type => thug
		path => ["D:/BOT/logs_samples/analysis2.json"]
		start_position => "beginning"
		codec => "json"
	}

	file {
    		type => kippo
    		path => ["D:/BOT/logs_samples/test.log"]
    		start_position => "beginning"
    	}

    file {
                type => honeybot
                path => ["D:/BOT/logs_samples/hydra.csv"]
                start_position => "beginning"
            }

}

filter {
  if [type] == "kippo" {

    if (  [message] =~ "connection lost" or
          [message] =~ "\[HoneyPotTransport" or
          [message] =~ "failed auth password" or
          [message] =~ "unauthorized login" or
          [message] =~ "\treason: " or
          [message] =~ "\[SSHChannel session" or
          [message] =~ "\[SSHService ssh-connection" or
          [message] =~ "\] starting service ssh-connection" or
          [message] =~ "\[-\] ") {
      drop {}
    }
    else if ( [message] =~ "\[SSHService ssh-userauth on HoneyPotTransport" and [message] =~ " login attempt ") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHService ssh-userauth on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] login attempt \[%{DATA:kippo-username}/%{DATA:kippo-password}\]" ]
      }
      mutate {
        add_field => [ "kippo-type", "credentials" ]
        strip => [ "kippo-session", "srcip" ]
      }
    }
    else if ( [message] =~ "\[SSHService ssh-userauth on HoneyPotTransport" and [message] =~ " trying auth ") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHService ssh-userauth on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] %{DATA:kippo-username} trying auth %{WORD:kippo-authmethod}" ]
      }
      mutate {
        add_field => [ "kippo-type", "authentication-method" ]
        strip => [ "kippo-session", "srcip", "kippo-authmethod" ]
      }
    }
    else if ( [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] New connection:") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[kippo.core.ssh.HoneyPotSSHFactory\] New connection: %{IP:srcip}:%{DATA:srcport} \(%{IP:dstip}:%{DATA:dstport}\) \[session: %{DATA:kippo-session}\]" ]
      }
      mutate {
        add_field => [ "kippo-type", "connection" ]
        strip => [ "kippo-session", "srcip", "dstip", "srcport", "dstport" ]
      }
    }


    date {
        match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
    }
  }

  if [type] == "iptables" {
    grok {
       match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} kernel: %{WORD:decision}:IN=(%{WORD:incoming_interface})? OUT=(%{WORD:outcoming_interface})? (MAC=(?<mac_addr>\S+) )?SRC=%{IP:srcip} DST=%{IP:dstip} LEN=%{DATA:len} TOS=%{DATA:tos} PREC=%{DATA:prec} TTL=%{DATA:ttl} ID=%{DATA:id}(?:\sDF)? PROTO=%{DATA:protocol} SPT=%{DATA:srcport} DPT=%{DATA:dstport} %{DATA:remainder}"]
    }
    mutate {
      strip => [ "srcip", "dstip", "hostname", "srcport" , "dstport" ]
    }
	geoip {
	  source => "srcip"
	  fields => ["city_name", "country_name", "location", "region_name"]
	}
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
    }
  }


if [type] == "honeybot" {
    grok {
           match =>  { "message" => "%{NUMBER:no1},%{NUMBER:no2},%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day},%{TIME:time},%{NUMBER:multicec},%{ISO8601_TIMEZONE:tzone},%{IP:srcip},%{WORD:srcport},%{IP:dstip},%{WORD:dstport},%{WORD:protocol},%{WORD:direction},%{GREEDYDATA:data},%{NUMBER:bytes}"  }
          }

    mutate {
      strip => [ "srcip", "dstip", "srcport", "dstport" ]
    }
	geoip {
	  source => "srcip"
	  fields => ["city_name", "country_name", "location", "region_name"]
	}

    mutate {
      add_field => [ "timestamp", "%{year}-%{month}-%{day} %{time}" ]
    }


    date {
      match => [ "timestamp", "yyyy-MM-dd H:mm:ss" ]
    }
  }


    if [type] == "thug" {
      json {
        source => "message"
        target => "message"
        add_field => {
            "exploits" => "%{[message][exploits]}"
            "behavior" => "%{[message][behavior]}"
        }
        remove_field => ["[message]"]
      }
    }



  if ( [type] == "kippo" or [type] == "iptables" or [type] == "honeybot" or [type] == "thug") {
      mutate {
        add_field => [ "basetype", "honeypot" ]
      }
    }
}

output {

    if [type] == "thug" {
        elasticsearch {
            hosts => ["localhost:9200"]
            index => "thug"
        }
    }

    if [type] == "honeybot" {
        elasticsearch {
            hosts => ["localhost:9200"]
            index => "honeybot"
        }
    }

    if [type] == "kippo" {
            elasticsearch {
                hosts => ["localhost:9200"]
                index => "kippo"
            }
        }



  stdout { codec => rubydebug }
}